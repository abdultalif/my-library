{
  "openapi": "3.0.0",
  "info": {
    "title": "Technical Backend Test - RESTful API Documentation",
    "version": "1.0.0",
    "description": "Halaman ini untuk mendokumentasi RESTful API dari Peminjaman Buku APP"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "API ini digunakan untuk mengelola autentikasi member"
    },
    {
      "name": "Members",
      "description": "API ini untuk mengelola member resources"
    },
    {
      "name": "Users",
      "description": "API ini untuk mengelola user resources"
    },
    {
      "name": "Books",
      "description": "API ini untuk mengelola buku resources"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:9000"
    },
    {
      "url": "https://my-library-app-seven.vercel.app"
    }
  ],
  "host": "my-library-app-seven.vercel.app",
  "schemes": ["https", "http"],
  "basePath": "/",
  "paths": {
    "/api/v1/auth": {
      "post": {
        "tags": ["Auth"],
        "summary": "REST API untuk register member",
        "description": "API ini digunakan ketika ingin mendaftar akun",
        "requestBody": {
          "description": "request body ini digunakan ketika ingin mendaftar akun",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email",
                    "example": "abdultalif75@gmail.com"
                  },
                  "name": {
                    "type": "string",
                    "description": "name",
                    "example": "Abdul Talif"
                  },
                  "password": {
                    "type": "string",
                    "description": "name",
                    "example": "Talif123!"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "name",
                    "example": "Talif123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Register successfuly, Please check your email"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "66fbb7774bc9d0e051f5dad6"
                        },
                        "email": {
                          "type": "string",
                          "example": "abdultalif75@gmail.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "Abdul Talif"
                        },
                        "Role": {
                          "type": "string",
                          "example": "Member"
                        },
                        "isActice": {
                          "type": "boolean",
                          "example": false
                        },
                        "tokenResetPassword": {
                          "type": "string",
                          "example": null
                        },
                        "expireTime": {
                          "type": "datetime",
                          "example": "2024-05-15T15:32:07.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": ["Email is required."]
                        },
                        "name": {
                          "type": "string",
                          "example": ["Name is required."]
                        },
                        "password": {
                          "type": "string",
                          "example": ["String must contain at least 8 character."]
                        },
                        "confirmPassword": {
                          "type": "string",
                          "example": ["Password and Confirm Password must be the same."]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "errors": {
                      "type": "string",
                      "example": "Email already exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/auth/set-active/{email}/{memberId}": {
      "get": {
        "tags": ["Auth"],
        "summary": "REST API untuk aktifasi akun member",
        "description": "API ini digunakan ketika ingin aktifasi akun member",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Member activated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "errors": {
                      "type": "string",
                      "example": "Member not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "REST API untuk Login member",
        "description": "API ini digunakan ketika ingin login",
        "requestBody": {
          "description": "request body ini digunakan ketika ingin login akun",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email",
                    "example": "abdultalif75@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "name",
                    "example": "Talif123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successfuly"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "unique-token-jwt"
                        },
                        "refreshToken": {
                          "type": "string",
                          "example": "unique-token-jwt"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": ["Email is required."]
                        },
                        "password": {
                          "type": "string",
                          "example": ["String must contain at least 8 character."]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "errors": {
                      "type": "string",
                      "example": "Email or Password is wrong"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/auth/refresh-token": {
      "post": {
        "tags": ["Auth"],
        "summary": "REST API untuk refresh token member",
        "description": "API ini digunakan ketika token member ingin diganti",
        "requestBody": {
          "description": "request body ini digunakan ketika token member ingin diganti",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "email",
                    "example": "unique-token-jwt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Token refreshed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "unique-token-jwt"
                        },
                        "refreshToken": {
                          "type": "string",
                          "example": "unique-token-jwt"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "refreshToken": {
                          "type": "string",
                          "example": ["refreshToken is required."]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "errors": {
                      "type": "string",
                      "example": "Invalid refresh token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "REST API untuk lupa password",
        "description": "API ini digunakan ketika member lupa password",
        "requestBody": {
          "description": "request body ini digunakan ketika member lupa password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email",
                    "example": "abdultalif75@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Forgot Password successfuly, please check your email"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "66fbb7774bc9d0e051f5dad6"
                        },
                        "code": {
                          "type": "string",
                          "example": "M001"
                        },
                        "email": {
                          "type": "string",
                          "example": "abdultalif75@gmail.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "Abdul Talif"
                        },
                        "token": {
                          "type": "string",
                          "example": "unique-token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": ["Email is required."]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "type": "string",
                      "example": "Email not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Failed to send email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/auth/set-active-token/{token}": {
      "get": {
        "tags": ["Auth"],
        "summary": "REST API untuk check active token lupa password",
        "description": "API ini digunakan ketika ingin check active token lupa password",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "set active token successfuly"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "errors": {
                      "type": "string",
                      "example": "Expired Token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/auth/reset-password/{token}": {
      "patch": {
        "tags": ["Auth"],
        "summary": "REST API untuk reset password",
        "description": "API ini digunakan ketika ingin reset password",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "request body ini digunakan ketika ingin reset password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "description": "name",
                    "example": "Talif123!"
                  },
                  "confirmNewPassword": {
                    "type": "string",
                    "description": "name",
                    "example": "Talif123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset Password successfuly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "newPassword": {
                          "type": "string",
                          "example": ["String must contain at least 8 character."]
                        },
                        "confirmNewPassword": {
                          "type": "string",
                          "example": ["Password and Confirm Password must be the same."]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v1/borrow": {
      "post": {
        "tags": ["Members"],
        "summary": "REST API untuk meminjam buku",
        "description": "API ini digunakan ketika member ingin login meminjam buku",
        "requestBody": {
          "description": "request body ini digunakan ketika member meminjam buku",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberCode": {
                    "type": "string",
                    "description": "Member Code",
                    "example": "M002"
                  },
                  "bookCodes": {
                    "type": "string",
                    "description": "Book Codes",
                    "example": ["B001", "B002"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Books borrowed successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "errors": {
                      "anyOf": [
                        {
                          "type": "string",
                          "example": "Member is penalized"
                        },
                        {
                          "type": "string",
                          "example": "Member cannot borrow more than 2 books in total"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "anyOf": [
                        {
                          "type": "string",
                          "example": "Member not found"
                        },
                        {
                          "type": "string",
                          "example": "Book with code ${bookCode} not found"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "errors": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "memberCode": {
                              "type": "string",
                              "example": ["Member code is required."]
                            },
                            "bookCodes": {
                              "type": "string",
                              "example": ["Expected array, received string"]
                            }
                          }
                        },
                        {
                          "type": "string",
                          "example": "Book with code ${bookCode} is out of stock"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/return": {
      "post": {
        "tags": ["Members"],
        "summary": "API untuk Memengembalikan buku",
        "description": "API ini digunakan ketika member ingin mengembalikan buku",
        "requestBody": {
          "description": "request body untuk mengembalikan buku",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberCode": {
                    "type": "string",
                    "description": "Member Code",
                    "example": "M002"
                  },
                  "bookCodes": {
                    "type": "string",
                    "description": "Book Codes",
                    "example": ["B001", "B002"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Books returned successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "errors": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "memberCode": {
                              "type": "string",
                              "example": ["Member code is required."]
                            },
                            "bookCodes": {
                              "type": "string",
                              "example": ["Expected array, received string"]
                            }
                          }
                        },
                        {
                          "type": "string",
                          "example": "Book with code ${bookCode} was not borrowed by this member"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "anyOf": [
                        {
                          "type": "string",
                          "example": "Member not found"
                        },
                        {
                          "type": "string",
                          "example": "Book with code ${bookCode} not found"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": ["Users"],
        "summary": "API untuk menampilkan Data Member",
        "description": "API ini digunakan untuk menampilkan semua data member",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Members checked successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "66f7c3f73e9841bfc42a5701"
                        },
                        "code": {
                          "type": "string",
                          "example": "M001"
                        },
                        "name": {
                          "type": "string",
                          "example": "Talif"
                        },
                        "role": {
                          "type": "string",
                          "example": "Member"
                        },
                        "borrowedBooks": {
                          "type": "string",
                          "example": []
                        },
                        "penaltyUntil": {
                          "type": "string",
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "type": "object",
                      "example": "Members Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/books": {
      "get": {
        "tags": ["Books"],
        "summary": "API untuk menampilkan Data Buku",
        "description": "API ini digunakan untuk menampilkan semua data buku",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Books checked successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "66f7c3e3c322841a8fe905f7"
                        },
                        "code": {
                          "type": "string",
                          "example": "B001"
                        },
                        "title": {
                          "type": "string",
                          "example": "One Piece"
                        },
                        "author": {
                          "type": "string",
                          "example": "Eichiro Oda"
                        },
                        "stock": {
                          "type": "number",
                          "example": 4
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "type": "object",
                      "example": "Books Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/books/{code}": {
      "get": {
        "tags": ["Books"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "API untuk menampilkan Data Buku berdasarkan Code",
        "description": "API ini digunakan untuk menampilkan semua data buku berdasarkan code",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Book checked successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "66f7c3e3c322841a8fe905f7"
                        },
                        "code": {
                          "type": "string",
                          "example": "B001"
                        },
                        "title": {
                          "type": "string",
                          "example": "One Piece"
                        },
                        "author": {
                          "type": "string",
                          "example": "Eichiro Oda"
                        },
                        "stock": {
                          "type": "number",
                          "example": 4
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "type": "object",
                      "example": "Book Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Books"],
        "summary": "API untuk mengedit Data Buku berdasarkan Code",
        "description": "API ini digunakan untuk mengedit semua data buku berdasarkan code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "request body ini digunakan update member",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "title",
                    "example": "One Piece"
                  },
                  "author": {
                    "type": "string",
                    "description": "author",
                    "example": "Eichiro Oda"
                  },
                  "stock": {
                    "type": "number",
                    "description": "stock",
                    "example": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Book updated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "type": "object",
                      "example": "Book Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Books"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "API untuk mengapus Data Buku berdasarkan Code",
        "description": "API ini digunakan untuk mengapus semua data buku berdasarkan code",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Book deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "errors": {
                      "type": "object",
                      "example": "Book Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "errors": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
